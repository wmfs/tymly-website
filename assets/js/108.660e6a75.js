(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{384:function(e,t,r){"use strict";r.r(t);var s=r(14),i=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"tymly-core-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tymly-core-plugin"}},[e._v("#")]),e._v(" tymly-core-plugin")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Description")]),e._v(" "),t("p",[e._v("Provides low-level functions for Tymly")])]),e._v(" "),t("h2",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[e._v("#")]),e._v(" Links")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/wmfs/tymly-core/tree/master/lib/plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github repository"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.npmjs.com/package/tymly-core-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("NPM package"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"state-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-resources"}},[e._v("#")]),e._v(" State Resources")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/available-resources.html"}},[e._v("availableResources")])],1),e._v(" "),t("td",[e._v("Returns a list of currently available resources")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/available-state-machines.html"}},[e._v("availableStateMachines")])],1),e._v(" "),t("td",[e._v("Returns a list of currently available state machines")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/awaiting-external-input.html"}},[e._v("awaitingExternalInput")])],1),e._v(" "),t("td",[e._v("Awaits for an external input to advance the state-machine")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/clear-configured-registry-key.html"}},[e._v("clearConfiguredRegistryKey")])],1),e._v(" "),t("td",[e._v("Clears a registry specific value")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/clear-registry-key.html"}},[e._v("clearRegistryKey")])],1),e._v(" "),t("td",[e._v("Clears a registry key value")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/config-setting.html"}},[e._v("configSetting")])],1),e._v(" "),t("td",[e._v("Reads a config setting")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/delete-cache-item.html"}},[e._v("deleteCacheItem")])],1),e._v(" "),t("td",[e._v("Delete item from cache within Tymly")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/deleting-by-id.html"}},[e._v("deletingById")])],1),e._v(" "),t("td",[e._v("Deletes document by ID")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/finding.html"}},[e._v("finding")])],1),e._v(" "),t("td",[e._v("Finds documents in a specified model that meet specified criteria and adds it to the tymly context")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/finding-by-id.html"}},[e._v("findingById")])],1),e._v(" "),t("td",[e._v("Finds a single document that has the specified id and adds it to the tymly context")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/finding-count.html"}},[e._v("findingCount")])],1),e._v(" "),t("td",[e._v("Counts documents with where clause from storage")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/finding-one.html"}},[e._v("findingOne")])],1),e._v(" "),t("td",[e._v("Finds a single document in a specified model that meets the specified criteria, and adds it to the tymly context")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/generate-uuid.html"}},[e._v("generateUuid")])],1),e._v(" "),t("td",[e._v("Generate UUID (Long or short!)")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/get-cache-item.html"}},[e._v("getCacheItem")])],1),e._v(" "),t("td",[e._v("Get item from cache within Tymly")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/get-configured-registry-key.html"}},[e._v("getConfiguredRegistryKey")])],1),e._v(" "),t("td",[e._v("Gets a specific registry key value")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/get-registry-key.html"}},[e._v("getRegistryKey")])],1),e._v(" "),t("td",[e._v("Gets a registry key value")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/launch-state-machine.html"}},[e._v("launchStateMachine")])],1),e._v(" "),t("td",[e._v("Launches another state machine, but does not wait for it to complete. The output of this state-resource is the execution description of the launched state machine. The description of the parent state machine is given as input to the launched state machine so it can, for example, send heart beats back.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/logging.html"}},[e._v("logging")])],1),e._v(" "),t("td",[e._v("Logs to the console via a template")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/reset-cache.html"}},[e._v("resetCache")])],1),e._v(" "),t("td",[e._v("Reset cache within Tymly")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/run-function.html"}},[e._v("runFunction")])],1),e._v(" "),t("td",[e._v("Run function from a blueprint")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/run-state-machine.html"}},[e._v("runStateMachine")])],1),e._v(" "),t("td",[e._v("Run another state machine and wait for it to complete. The output of this state-resource is the output from the spawned state machine.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/send-task-heartbeat.html"}},[e._v("sendTaskHeartbeat")])],1),e._v(" "),t("td",[e._v("Sends Task Heartbeat to another execution.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/send-task-success.html"}},[e._v("sendTaskSuccess")])],1),e._v(" "),t("td",[e._v("Sends Task Success to another execution.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/set-client-meta-data.html"}},[e._v("setClientMetaData")])],1),e._v(" "),t("td",[e._v("No description! ðŸ˜¦")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/set-configured-registry-key.html"}},[e._v("setConfiguredRegistryKey")])],1),e._v(" "),t("td",[e._v("Sets a registry specific value")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/set-context-data.html"}},[e._v("setContextData")])],1),e._v(" "),t("td",[e._v("Sets the context data")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/set-registry-key.html"}},[e._v("setRegistryKey")])],1),e._v(" "),t("td",[e._v("Sets an arbitrary registry key value")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/storage-search.html"}},[e._v("storageSearch")])],1),e._v(" "),t("td",[e._v("Paginated search across documents from storage")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/timestamp.html"}},[e._v("timestamp")])],1),e._v(" "),t("td",[e._v("Generates a timestamp")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/state-resources/upserting.html"}},[e._v("upserting")])],1),e._v(" "),t("td",[e._v("Perists a document to storage")])])])]),e._v(" "),t("h2",{attrs:{id:"blueprint-directories"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blueprint-directories"}},[e._v("#")]),e._v(" Blueprint directories")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Directory")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("/functions")])]),e._v(" "),t("td",[e._v("Blueprints are predominantly declarative - preferring JSON definitions over hand-coded functions. But for those times when only code will do, blueprints can supply supplemental Javascript functions too.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("/models")])]),e._v(" "),t("td",[e._v("This sub-directory deals with the "),t("code",[e._v("M")]),e._v(" portion of "),t("code",[e._v("MVC")]),e._v(" - each JSON file in here defines a data model that can be subsequently used by a State Machine. Nested documents are supported along with a couple of extensions to help describe database indexes and primary keys. Tymly uses the JSON Schema standard for describing data models.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("/registry-keys")])]),e._v(" "),t("td",[e._v("Consider a blueprint that defines a simple workflow that sends a Tweet - what Twitter username/password should be used? This is where "),t("em",[e._v("Registry Keys")]),e._v(" come in useful... a simple key/value store inside Tymly, where keys are declared inside this sub-directory. To help conjure administrative screens and help validation, the required value content is described using JSON Schema.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("/state-machines")])]),e._v(" "),t("td",[e._v("Each JSON file inside this sub-directory will be used to conjure a State Machine for orchestrating a workflow. Tymly uses the open "),t("a",{attrs:{href:"https://states-language.net/spec.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon State Language"),t("OutboundLink")],1),e._v(" to describe State Machines.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("/tags")])]),e._v(" "),t("td",[e._v("JSON files providing 'tags' which are used throughout Tymly to help categorise things and aid discovery")])])])]),e._v(" "),t("h2",{attrs:{id:"services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#services"}},[e._v("#")]),e._v(" Services")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/blueprint-docs.html"}},[e._v("blueprintDocs")])],1),e._v(" "),t("td",[e._v("Allows tracking of documents created via blueprints, so they don't get reverted when Tymly restarts")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/caches.html"}},[e._v("caches")])],1),e._v(" "),t("td",[e._v("Adds "),t("a",{attrs:{href:"https://www.npmjs.com/package/lru-cache",target:"_blank",rel:"noopener noreferrer"}},[e._v("lru-cache"),t("OutboundLink")],1),e._v("-based caching to Tymly. Note defaults will be used if no "),t("code",[e._v("caches")]),e._v(" configuration is provided.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/categories.html"}},[e._v("categories")])],1),e._v(" "),t("td",[e._v("Provides a generic mechanism to help tag/classify search results, tasks, forms etc.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/functions.html"}},[e._v("functions")])],1),e._v(" "),t("td",[e._v("Adds ability to run custom logic as defined in a blueprint")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/inventory.html"}},[e._v("inventory")])],1),e._v(" "),t("td",[e._v("Collates component information by scanning plugins. The results can then be used by tooling and documentation-generators")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/logger.html"}},[e._v("logger")])],1),e._v(" "),t("td",[e._v("Tymly Logger Service")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/registry.html"}},[e._v("registry")])],1),e._v(" "),t("td",[e._v("Provides a mechanism for states to refer to site-specific values")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/statebox.html"}},[e._v("statebox")])],1),e._v(" "),t("td",[e._v("Runs state machines defined in Amazon States Language")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/storage.html"}},[e._v("storage")])],1),e._v(" "),t("td",[e._v("This is the default in-memory storage service that ships with Tymly. Useful for testing and not much else.")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/temp.html"}},[e._v("temp")])],1),e._v(" "),t("td",[e._v("Helps configure and manage a temporary folder for Tymly to use")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/timestamp.html"}},[e._v("timestamp")])],1),e._v(" "),t("td",[e._v("Tymly Time Service!")])]),e._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/reference/plugins/tymly-core-plugin/services/tymly.html"}},[e._v("tymly")])],1),e._v(" "),t("td",[e._v("Tymly Service")])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);